import {
  BalanceTransaction,
  CreatePaymentPayload,
  Payment,
  PaymentBalanceTxnType,
  PaymentCaptureStrategy,
  PaymentStatus,
  RefundPaymentPayload,
  UpdatePaymentPayload,
} from "../../lib/internal/payment";
import { RefundReason } from "../../lib/internal/refund";

export const payment1: Payment = {
  id: "py_abc",
  accountId: "acc_abc",
  amount: 10000,
  amountDisputed: 0,
  amountRefunded: 0,
  amountRefundable: 10000,
  balance: 99850,
  feeAmount: 150,
  captured: true,
  captureStrategy: PaymentCaptureStrategy.Automatic,
  currency: "usd",
  description: "my_order_abc",
  disputed: false,
  disputes: [],
  errorCode: "credit_card_number_invalid",
  errorDescription: "Credit Card Number Invalid (Failed LUHN checksum)",
  isTest: true,
  metadata: {},
  paymentIntentId: "py_abc",
  paymentMethod: {
    card: {
      id: "pm_123abc",
      acctLastFour: 4242,
      brand: "Visa",
      name: "Amanda Kessel",
      token: "pm_123abc",
      metadata: {},
      createdAt: "2021-01-01T12:00:00Z",
      updatedAt: "2021-01-01T12:00:00Z",
      addressLine1Check: "unchecked",
      addressPostalCodeCheck: "unchecked",
    },
    customerId: "cust_abc",
    signature: "4guAJNkVA3lRLVlanNVoBK",
  },
  applicationFee: {
    id: "fee_123abc",
    amount: 150,
    currency: "usd",
    createdAt: "2021-01-01T12:00:00Z",
    updatedAt: "2021-01-01T12:00:00Z",
  },
  refunded: false,
  status: PaymentStatus.Pending,
  createdAt: "2021-01-01T12:00:00Z",
  updatedAt: "2021-01-01T12:00:00Z",
};

export const payment2: Payment = {
  id: "py_xyz",
  accountId: "acc_xyz",
  amount: 50000,
  amountDisputed: 0,
  amountRefunded: 0,
  amountRefundable: 50000,
  balance: 120330,
  feeAmount: 550,
  captured: true,
  captureStrategy: PaymentCaptureStrategy.Automatic,
  currency: "usd",
  description: "my_order_xyz",
  disputed: false,
  disputes: [],
  errorCode: "credit_card_number_invalid",
  errorDescription: "Credit Card Number Invalid (Failed LUHN checksum)",
  isTest: true,
  metadata: {},
  paymentIntentId: "py_xyz",
  paymentMethod: {
    bankAccount: {
      id: "pm_123xyz",
      acctLastFour: 4242,
      brand: "something else",
      name: "Fred Kessel",
      token: "pm_123xyz",
      metadata: {},
      createdAt: "2021-01-01T12:00:00Z",
      updatedAt: "2021-01-01T12:00:00Z",
      addressLine1Check: "unchecked",
      addressPostalCodeCheck: "unchecked",
    },
    customerId: "cust_xyz",
    signature: "4guAJNkVA3lRLVlanNVoBK",
  },
  applicationFee: {
    id: "fee_123xyz",
    amount: 150,
    currency: "usd",
    createdAt: "2021-01-01T12:00:00Z",
    updatedAt: "2021-01-01T12:00:00Z",
  },
  refunded: false,
  status: PaymentStatus.Succeeded,
  createdAt: "2022-01-01T12:00:00Z",
  updatedAt: "2022-01-01T12:00:00Z",
};

export const paymentBalanceTransaction1: BalanceTransaction = {
  id: "pbt_123abc",
  amount: 40145,
  balance: 53550,
  currency: "usd",
  financialTransactionId: "py_2644abc",
  paymentId: "py_2644abc",
  paymentBalanceTxnType: PaymentBalanceTxnType.Refund,
  sourceId: "fee_6Vt2jlZZVh",
  sourceType: "ApplicationFee",
  createdAt: "2021-01-01T12:00:00Z",
  updatedAt: "2021-01-01T12:00:00Z",
};

export const paymentBalanceTransaction2: BalanceTransaction = {
  id: "pbt_123xyz",
  amount: 1030,
  balance: 10000,
  currency: "usd",
  financialTransactionId: "py_2644xyz",
  paymentId: "py_2644xyz",
  paymentBalanceTxnType: PaymentBalanceTxnType.Payment,
  sourceId: "fee_6Vt2jlZZVh",
  sourceType: "ApplicationFee",
  createdAt: "2021-01-01T12:00:00Z",
  updatedAt: "2021-01-01T12:00:00Z",
};

export const createPaymentPayload: CreatePaymentPayload = {
  amount: 1000,
  currency: "usd",
  captureStrategy: PaymentCaptureStrategy.Automatic,
  email: "example@test.com",
  description: "Charging $10 to the test card",
  paymentMethod: {
    card: {
      name: "Sylvia Fowles",
      number: "4111111111111111",
      verification: "123",
      month: "3",
      year: "2040",
      addressPostalCode: "55555",
    },
  },
};

export const updatePaymentPayload: UpdatePaymentPayload = {
  description: "order_xyz",
  metadata: { some_extra: "data" },
};

export const refundPaymentPayload: RefundPaymentPayload = {
  amount: 10000,
  description: "string",
  reason: RefundReason.Duplicate,
  metadata: { some_extra: "data" },
};
